# GitHub Actions Workflow for Building COSMOS MQTT Controller APK
# Place this file in .github/workflows/build-apk.yml

name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          libtinfo5 cmake libffi-dev libssl-dev \
          build-essential ccache
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
    
    - name: Build APK with Buildozer
      run: |
        buildozer android debug
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: cosmos-mqtt-controller-apk
        path: bin/*.apk
        retention-days: 30
    
    - name: Create Release
      if: github.ref == 'refs/heads/main' && success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: COSMOS MQTT Controller v1.0.${{ github.run_number }}
        body: |
          Automated build of COSMOS MQTT Controller Android APK
          
          Features:
          - MQTT connection to custom brokers
          - Brake command (brakeCosmos topic)
          - Land command (landCosmos topic)
          - Volume button control
          - Background operation
          - Real-time status monitoring
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main' && success()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/cosmosmqtt-1.0-armeabi-v7a-debug.apk
        asset_name: cosmos-mqtt-controller-v1.0.${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
